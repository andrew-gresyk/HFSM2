<?xml version="1.0" encoding="utf-8"?>

<!-- https://docs.microsoft.com/en-us/visualstudio/debugger/format-specifiers-in-cpp -->

<AutoVisualizer xmlns="http://schemas.microsoft.com/vstudio/debugger/natvis/2010">

	<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->

	<Type Name="std::type_index">
		<DisplayString Condition="_Tptr->_Data._UndecoratedName">{_Tptr->_Data._UndecoratedName,sb}</DisplayString>
		<DisplayString Condition="_Tptr->_Data._DecoratedName[5]=='$'">
			{&amp;_Tptr->_Data._DecoratedName[6],[strchr(_Tptr->_Data._DecoratedName,'@') - _Tptr->_Data._DecoratedName - 6]sb}
			&lt;
			{strstr(_Tptr->_Data._DecoratedName,"@V") + 2,[strstr(_Tptr->_Data._DecoratedName,"@?") - strstr(_Tptr->_Data._DecoratedName,"@V") - 2]sb}
			&gt;
		</DisplayString>
		<DisplayString>{&amp;_Tptr->_Data._DecoratedName[4],[strchr(_Tptr->_Data._DecoratedName,'@') - _Tptr->_Data._DecoratedName - 4]sb}</DisplayString>
		<Expand HideRawView="true" />
	</Type>

	<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->

	<Type Name="hfsm2::detail::Array&lt;*&gt;">
		<DisplayString>&lt;{_count}&gt;</DisplayString>
		<Expand HideRawView="true">
			<ArrayItems>
				<Size>_count</Size>
				<ValuePointer>_items</ValuePointer>
			</ArrayItems>
		</Expand>
	</Type>

	<!-- ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ -->

	<Type Name="hfsm2::detail::StaticArray&lt;*&gt;">
		<DisplayString>&lt;{$T2}&gt;</DisplayString>
		<Expand HideRawView="true">
			<ArrayItems>
				<Size>$T2</Size>
				<ValuePointer>_items</ValuePointer>
			</ArrayItems>
		</Expand>
	</Type>

	<!-- ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ -->

	<Type Name="hfsm2::detail::BitArray&lt;*&gt;">
		<DisplayString>&lt;{CAPACITY &amp; 0x1}&gt;</DisplayString>
		<Expand HideRawView="true">
			<IndexListItems>
				<Size>(CAPACITY + 7 / 8)</Size>
				<ValueNode>(_storage[$i / (sizeof(Unit) * 8)] &gt;&gt; ($i % (sizeof(Unit) * 8))) &amp; 0x1</ValueNode>
			</IndexListItems>
		</Expand>
	</Type>

	<Type Name="hfsm2::detail::BitArray&lt;*&gt;::Bits">
		<DisplayString>&lt;{CAPACITY &amp; 0x1}&gt;</DisplayString>
		<Expand HideRawView="true">
			<ExpandedItem>_storage</ExpandedItem>
		</Expand>
	</Type>

	<Type Name="hfsm2::detail::BitArray&lt;*&gt;::ConstBits">
		<DisplayString>&lt;{CAPACITY &amp; 0x1}&gt;</DisplayString>
		<Expand HideRawView="true">
			<ExpandedItem>_storage</ExpandedItem>
		</Expand>
	</Type>

	<!-- ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ -->

	<Type Name="hfsm2::detail::List&lt;*&gt;">
		<DisplayString>{_count} / {CAPACITY}</DisplayString>
		<Expand HideRawView="true">
			<IndexListItems Condition="_count > 0">
				<Size>CAPACITY</Size>
				<ValueNode>_cells[$i]</ValueNode>
			</IndexListItems>
		</Expand>
	</Type>

	<!-- ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ -->

	<Type Name="hfsm2::detail::List&lt;*&gt;::Cell">
		<DisplayString>{item}</DisplayString>
	</Type>

	<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->

	<Type Name="hfsm2::detail::Parent">
		<DisplayString Condition="forkId &gt; 0">({(unsigned) ( forkId - 1) &amp; 0xFF}) ► {(unsigned) prong &amp; 0xFF}</DisplayString>
		<DisplayString Condition="forkId &lt; 0">[{(unsigned) (-forkId - 1) &amp; 0xFF}] ► {(unsigned) prong &amp; 0xFF}</DisplayString>
	</Type>

	<!-- ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ -->

	<Type Name="hfsm2::detail::CompoFork">
		<DisplayString>[{TYPE}]: &lt;{(unsigned) resumable &amp; 0xFF}&gt; ◄ ({(unsigned) active &amp; 0xFF}) ► &lt;{(unsigned) requested &amp; 0xFF}&gt;</DisplayString>
		<Expand HideRawView="true" />
	</Type>

	<!-- ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ -->

	<Type Name="hfsm2::detail::TransitionType">
		<DisplayString>{type, en}: {*(std::type_index*)&amp;stateType._storage}</DisplayString>
		<Expand HideRawView="true" />
	</Type>

	<!-- ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ -->

	<Type Name="hfsm2::detail::TransitionBase">
		<DisplayString Condition="origin == 0xFFFF">{type, en} (► {destination})</DisplayString>
		<DisplayString>{type, en} ({origin} ► {destination})</DisplayString>
		<Expand HideRawView="true" />
	</Type>

	<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->

	<Type Name="hfsm2::detail::ControlT&lt;*&gt;">
		<DisplayString>{_context}</DisplayString>
	</Type>

	<!-- ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ -->

	<Type Name="hfsm2::detail::PlanControlT&lt;*&gt;">
		<DisplayString>({_status})</DisplayString>
	</Type>

	<!-- ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ -->

	<Type Name="hfsm2::detail::FullControlT&lt;*&gt;">
		<DisplayString>[{_status}]</DisplayString>
	</Type>

	<!-- ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ -->

	<Type Name="hfsm2::detail::GuardControlT&lt;*,*&gt;">
		<DisplayString>[{_status}] ({_pending})</DisplayString>
	</Type>

	<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->

	<Type Name="hfsm2::detail::Status">
		<DisplayString Condition="outerTransition">OuterTransition</DisplayString>
		<DisplayString>{result}</DisplayString>
		<Expand HideRawView="true" />
	</Type>

	<!-- ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ -->

	<Type Name="hfsm2::detail::Task">
		<DisplayString>{origin} ► {destination}</DisplayString>
	</Type>

	<Type Name="hfsm2::detail::TaskLink">
		<DisplayString>{prev} ◄► {next}</DisplayString>
	</Type>

	<!-- ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ -->

	<Type Name="hfsm2::detail::PlanT&lt;*&gt;">
		<DisplayString Condition="_bounds.first == INVALID_LONG_INDEX">&lt;Empty&gt;</DisplayString>
		<Expand HideRawView="true">
			<CustomListItems MaxItemsPerView="100">
				<Variable Name="i" InitialValue="_bounds.first" />

				<If Condition="_bounds.first != INVALID_LONG_INDEX &amp;&amp; _bounds.first != _bounds.last">
					<Loop>
						<Item>_planData.tasks._cells[i].item</Item>
						<Exec>i = _planData.taskLinks[i].next</Exec>
						<Break Condition="i == _bounds.last" />
					</Loop>
					<Item>_planData.tasks._cells[_bounds.last].item</Item>
				</If>

				<If Condition="_bounds.first != INVALID_LONG_INDEX &amp;&amp; _bounds.first == _bounds.last">
					<Item>_planData.tasks._cells[_bounds.last].item</Item>
				</If>
			</CustomListItems>
		</Expand>
	</Type>

	<!-- ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ -->

	<Type Name="hfsm2::detail::PlanT&lt;*&gt;::Iterator">
		<DisplayString Condition="_curr == INVALID_LONG_INDEX">&lt;Empty&gt;</DisplayString>
		<DisplayString Condition="_curr != INVALID_LONG_INDEX">{_plan._planData.tasks._cells[_curr].item}</DisplayString>
		<Expand HideRawView="true">
			<ExpandedItem Condition="_curr != INVALID_LONG_INDEX">_plan._planData.tasks._cells[_curr].item</ExpandedItem>
		</Expand>
	</Type>

	<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->

	<Type Name="hfsm2::detail::DBox&lt;*&gt;">
		<DisplayString>{TYPE}</DisplayString>
		<Expand HideRawView="true" />
	</Type>

	<Type Name="hfsm2::detail::SBox&lt;*&gt;">
		<DisplayString>{TYPE}</DisplayString>
		<Expand HideRawView="true" />
	</Type>

	<!-- ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ -->

	<Type Name="hfsm2::detail::S_&lt;*&gt;">
		<DisplayString>{_headBox}</DisplayString>
		<Expand HideRawView="true" />
	</Type>

	<!-- ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ -->

	<Type Name="hfsm2::detail::C_&lt;*&gt;">
		<DisplayString>({_headState})</DisplayString>
	</Type>

	<Type Name="hfsm2::detail::CS_&lt;*&gt;">
		<DisplayString Optional="true">{{ {lHalf} {rHalf} }}</DisplayString>
		<DisplayString Optional="true">{{{state}}}</DisplayString>
	</Type>

	<!-- ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ -->

	<Type Name="hfsm2::detail::O_&lt;*&gt;">
		<DisplayString>[{_headState}]</DisplayString>
	</Type>

	<Type Name="hfsm2::detail::OS_&lt;*&gt;">
		<DisplayString Optional="true">{initial} {remaining}</DisplayString>
		<DisplayString>{initial}</DisplayString>
		<Expand HideRawView="true" />
	</Type>

	<!-- ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ -->

	<Type Name="hfsm2::detail::R_&lt;*&gt;">
		<DisplayString Optional="true">{_structure}</DisplayString>
		<DisplayString Optional="true">{_requests}</DisplayString>
		<Expand>
			<ExpandedItem Optional="true">_structure</ExpandedItem>
			<ExpandedItem Optional="true">_requests</ExpandedItem>
			<ExpandedItem Optional="true">_transitionHistory</ExpandedItem>
		</Expand>
	</Type>

	<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->

	<Type Name="hfsm2::Iterator&lt;*&gt;">
		<DisplayString>[{_cursor}] = {_t[_cursor]}</DisplayString>
		<Expand>
			<ExpandedItem>_container</ExpandedItem>
		</Expand>
	</Type>

	<!-- ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ -->

	<Type Name="hfsm2::StructureEntry">
		<DisplayString Condition=" isActive">█ {prefix,sub}{name,sb}</DisplayString>
		<DisplayString Condition="!isActive">░ {prefix,sub}{name,sb}</DisplayString>
		<Expand HideRawView="true" />
	</Type>

	<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->

	<Type Name="Event">
		<DisplayString Condition="target == 65535">{type, en} [{origin}]</DisplayString>
		<DisplayString Condition="origin == 65535">(external) {type, en} [{target}]</DisplayString>
		<DisplayString							  >[{origin}] {type, en} [{target}]</DisplayString>
		<Expand HideRawView="true" />
	</Type>

	<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->

</AutoVisualizer>
